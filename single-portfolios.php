<?php
/**
 * Genesis Framework.
 *
 * WARNING: This file is part of the core Genesis Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package Genesis\Templates
 * @author  StudioPress
 * @license GPL-2.0+
 * @link    http://my.studiopress.com/themes/genesis/
 */

wp_enqueue_script('isotope', get_stylesheet_directory_uri() . '/js/jquery.isotope.min.js', array('jquery'), '1.5.25', true);
wp_enqueue_script('isotope_init', get_stylesheet_directory_uri() . '/js/isotope_init2.js', array('isotope'), '', true);

remove_action( 'genesis_loop', 'genesis_do_loop' );
remove_action( 'genesis_loop', 'genesis_standard_loop' );

remove_action( 'genesis_after_content', 'genesis_get_sidebar' );

// Custom Loop for Blog
add_action( 'genesis_loop', 'custom_single' );
function custom_single() { 
global $default_bg;

	printf( '<section class="subpage-container portfolio-container"><div class="wrap">' );
			
			printf('<div class="single-portfolio-item">');
					
				//Slider Starts Here	
				if( have_rows('portfolio') ):
					
					//Gallery
					printf('<div class="one-half one-half-images first isotope loading">'); ?>

                          <?php while ( have_rows('portfolio') ) : the_row(); ?> 
                      
                              <div class="single-portfolio-image isotope-item opacity0">

									<?php
									// first, get the image ID returned by ACF
									$image_id = get_sub_field('upload_image');
									// and the image size you want to return
									$image_size = 'single-portfolio';
									// use wp_get_attachment_image_src to return an array containing the image
									// we'll pass in the $image_id in the first parameter
									// and the image size registered using add_image_size() in the second
									$image_array = wp_get_attachment_image_src($image_id, $image_size);
									// finally, extract and store the URL from $image_array
									$image_url = $image_array[0];
									?>
                                    
                                    <?php
									// first, get the image ID returned by ACF
									$large_image_id = get_sub_field('upload_image');
									// and the image size you want to return
									$large_image_size = 'full';
									// use wp_get_attachment_image_src to return an array containing the image
									// we'll pass in the $image_id in the first parameter
									// and the image size registered using add_image_size() in the second
									$large_image_array = wp_get_attachment_image_src($large_image_id, $large_image_size);
									// finally, extract and store the URL from $image_array
									$large_image_url = $large_image_array[0];
									?>
									
									<a href="<?php echo $large_image_url; ?>" class="fancybox" rel="gallery01"><img src="<?php echo $image_url; ?>" alt=""></a>
                
                              </div>
                        
                          <?php endwhile; ?>
                         
                          </div>

                            <?php else : endif; ?>
                       <!--Slider Ends Here-->
		
					<?php printf ('</div>');
					
					//Content
					printf('<div class="one-half one-half-text">');
							
							the_content();
							
							if( get_field('testimonial_text') ): 
							
                            printf ('<div class="singletestimonial">');
									
									the_field('testimonial_text');
									
							printf( '<strong class="designation">'); 
									
									the_field('testimonial_title');
									
							printf('</strong>');
									
							printf ('</div>');
							
							endif;
							
					printf ('</div>');							

			printf ('</div>');	

	printf( '</div></section>' ); ?>

	<?php

}

//* Run the Genesis loop
genesis();